{"version":3,"sources":["components/About/index.js","components/Contact/index.js","components/Dossier/index.js","components/Nav/index.js","components/NoMatch/index.js","components/Page/index.js","components/Projects/index.js","components/Skills/index.js","App.js","serviceWorker.js","index.js"],"names":["About","react_default","a","createElement","components_Nav","class","pageIndex","components_Page","pageName","page","Component","Contact","Dossier","react_router_dom","react_router","path","exact","component","Skills","Projects","NoMatch","Nav","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","hasTab","pages","window","location","href","split","pop","_this2","includes","map","key","to","className","toUpperCase","Page","App","components_Dossier","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d9e2b570.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Nav, Page } from \"../\";\r\nimport \"./style.css\";\r\n\r\nclass About extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Nav\r\n          class=\"nav-left\"\r\n          pageIndex={0}\r\n        />\r\n        <Page pageName=\"about\" page=\"left\" />\r\n        <Page pageName=\"about\" page=\"right\" />\r\n        <Nav\r\n          class=\"nav-right\"\r\n          pageIndex={0}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\nimport { Nav, Page } from \"../\";\r\nimport \"./style.css\";\r\n\r\nclass Contact extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Nav\r\n          class=\"nav-left\"\r\n          pageIndex={3}\r\n        />\r\n        <Page pageName=\"contact\" page=\"left\" />\r\n        <Page pageName=\"contact\" page=\"right\" />\r\n        <Nav\r\n          class=\"nav-right\"\r\n          pageIndex={3}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { About, Contact, NoMatch, Projects, Skills } from \"../\";\r\nimport \"./style.css\";\r\n\r\nclass Dossier extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router>\r\n            <Switch>\r\n              <Route path=\"/\" exact component={About} />\r\n              <Route path=\"/about\" component={About} />\r\n              <Route path=\"/skills\" component={Skills} />\r\n              <Route path=\"/projects\" component={Projects} />\r\n              <Route path=\"/contact\" component={Contact} />\r\n              <Route component={NoMatch} />\r\n            </Switch>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dossier;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\nclass Nav extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.pages = [\"about\", \"skills\", \"projects\", \"contact\"];\r\n    this.pageName = window.location.href.split(\"/\").pop();\r\n  }\r\n\r\n  hasTab = this.props.class === \"nav-left\"\r\n  ? pageIndex => {\r\n      return pageIndex < this.props.pageIndex;\r\n    }\r\n  : pageIndex => {\r\n      return pageIndex >= this.props.pageIndex;\r\n    };\r\n\r\n  render() {\r\n    if (this.pageName && !this.pages.includes(this.pageName)) {\r\n      return (<div />);\r\n    }\r\n    return (\r\n      <div>\r\n        <nav>\r\n          {this.pages.map((pageName, pageIndex) => {\r\n            return (\r\n              this.hasTab(pageIndex)\r\n              ? <Link key={pageIndex} to={\"/\" + pageName}>\r\n                  <button className=\"nav-text\">\r\n                    {pageName.toUpperCase()}\r\n                  </button>\r\n                </Link>\r\n              : <div\r\n                  key={pageIndex}\r\n                  className=\"tab-space\"\r\n                />\r\n            );\r\n          })}\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\n\r\nclass NoMatch extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        404: Not Found\r\n      </div>\r\n    );\r\n  }\r\n}\r\n  \r\nexport default NoMatch;\r\n","import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\n\r\nclass Page extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.page} page of {this.props.pageName}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Page;\r\n","import React, { Component } from \"react\";\r\nimport { Nav, Page } from \"../\";\r\nimport \"./style.css\";\r\n\r\nclass Projects extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Nav\r\n          class=\"nav-left\"\r\n          pageIndex={2}\r\n        />\r\n        <Page pageName=\"projects\" page=\"left\" />\r\n        <Page pageName=\"projects\" page=\"right\" />\r\n        <Nav\r\n          class=\"nav-right\"\r\n          pageIndex={2}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Projects;\r\n","import React, { Component } from \"react\";\r\nimport { Nav, Page } from \"../\";\r\nimport \"./style.css\";\r\n\r\nclass Skills extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Nav\r\n          class=\"nav-left\"\r\n          pageIndex={1}\r\n        />\r\n        <Page pageName=\"skills\" page=\"left\" />\r\n        <Page pageName=\"skills\" page=\"right\" />\r\n        <Nav\r\n          class=\"nav-right\"\r\n          pageIndex={1}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Skills;\r\n","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n\nimport { Dossier } from \"./components\";\n\nfunction App() {\n  return (\n    <Dossier />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}